<!DOCTYPE html>
<html>
<head>
    <title>Test Status by Attribute</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Thu Aug 24 2017 14:19:25 GMT-0600 (MDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Thu Aug 24 2017 14:19:25 GMT-0600 (MDT)";
        var STORY    = "US1716";
        var BUILDER  = "corkr03";
        var CHECKSUM = 10268490631;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("Rally.technicalservices.MultiValueComboBox",{alias:"widget.multivaluecombo",extend:"Ext.form.FieldContainer",mixins:{field:"Ext.form.field.Field"},cls:"multistate",config:{fieldLabel:"",modelName:void 0,fieldName:void 0,value:void 0},refreshField:function(a){this.fieldName=a,this._initCombobox()},setModel:function(a){this.fieldName="",this.modelName=a,this._initCombobox()},refreshFieldAndModel:function(a,b){this.fieldName=a,this.modelName=b,this._initCombobox()},initComponent:function(){this.callParent(arguments),this.mixins.field.initField.call(this),this._initCombobox()},_initCombobox:function(){this.down("rallycombobox")&&this.down("rallycombobox").destroy(),this.down("rallytagpicker")&&this.down("rallytagpicker").destroy();return"Tags"===this.fieldName?void this.add({xtype:"rallytagpicker"}):void this._addMultiValueComboBox()},_addMultiValueComboBox:function(){var a=this;this.add([{xtype:"rallycombobox",name:"valField",plugins:["rallyfieldvalidationui"],multiSelect:!0,emptyText:this.emptyText,displayField:"name",valueField:"value",width:this.width,editable:!1,submitValue:!1,storeType:"Ext.data.Store",storeConfig:{remoteFilter:!1,fields:["name","value"],data:[]},listeners:{change:function(b,c,d){a.currentValue=c}}}]),this.modelName&&this.fieldName&&this._loadValues()},_loadValues:function(){console.log("_loadValues",this.modelName,this.fieldName),Rally.technicalservices.WsapiToolbox.fetchAllowedValues(this.modelName,this.fieldName).then({scope:this,success:function(a){var b=Ext.Array.map(a,function(a){return{name:a,value:a}}),c=this.down("rallycombobox");c.getStore().loadData(b);var d=this.getValue();console.log("current values:",d),d&&!Ext.isArray(d)&&(d=d.split(",")),c.setValue(d),this.fireEvent("ready",this)},failure:function(a){Ext.Msg.alert("Problem Retrieving States",a)}})},getSubmitData:function(){var a={};if(this.down("rallytagpicker")){var b=[];_.each(this.down("rallytagpicker").getValue(),function(a){b.push(a.get("Name"))}),a[this.name]=b}else a[this.name]=this.currentValue;return a}}),Ext.override(Rally.ui.combobox.FieldComboBox,{blackListFields:[],whiteListFields:[],allowedTypes:[],constrained:!0,constructor:function(a){return this.blackListFields=a.blackListFields||[],this.whiteListFields=a.whiteListFields||[],this.allowedTypes=a.allowedTypes||[],this.constrained=a.constrained||!1,this.mergeConfig(a),this.store=Ext.create("Ext.data.Store",{fields:[this.valueField,this.displayField,"fieldDefinition"],data:[]}),this.callParent([this.config])},_populateStore:function(){if(this.store){var a=_.sortBy(_.map(_.filter(this.model.getFields(),this._isNotHidden,this),this._convertFieldToLabelValuePair,this),"name");this.store.loadRawData(a),this.setDefaultValue(),this.onReady()}},_isNotHidden:function(a){console.log("_isNotHidden",a,this.allowedTypes);var b=!1;return!a.hidden&&a.attributeDefinition&&(Ext.Array.contains(this.allowedTypes,a.attributeDefinition.AttributeType)&&(b=!0),Ext.Array.contains(this.blackListFields,a.name)&&(b=!1),this.constrained===!0&&a.attributeDefinition.Constrained!==!0&&(b=!1),Ext.Array.contains(this.whiteListFields,a.name)&&(b=!0)),b}}),Ext.define("Rally.technicalservices.WsapiToolbox",{singleton:!0,fetchWsapiCount:function(a,b){var c=Ext.create("Deft.Deferred");return Ext.create("Rally.data.wsapi.Store",{model:a,fetch:["ObjectID"],filters:b,limit:1,pageSize:1}).load({callback:function(d,e,f){f?c.resolve(e.resultSet.totalRecords):c.reject(Ext.String.format("Error getting {0} count for {1}: {2}",a,b.toString(),e.error.errors.join(",")))}}),c},fetchWsapiRecords:function(a){var b=Ext.create("Deft.Deferred");a.limit||(a.limit="Infinity"),a.pageSize||(a.pageSize=2e3);Ext.create("Rally.data.wsapi.Store",a).load({callback:function(a,c,d){d?b.resolve(a):b.reject(Ext.String.format("Error getting {0} for {1}: {2}",model,query_filters.toString(),c.error.errors.join(",")))}});return b},fetchReleases:function(a){var b=Ext.create("Deft.Deferred"),c=a.getRecord();return null==c&&b.resolve([]),Ext.create("Rally.data.wsapi.Store",{model:"Release",fetch:["ObjectID"],filters:[{property:"Name",value:c.get("Name")},{property:"ReleaseStartDate",value:c.get("ReleaseStartDate")},{property:"ReleaseDate",value:c.get("ReleaseDate")}],limit:1/0}).load({callback:function(a,c,d){d?b.resolve(a):b.reject("Error loading Releases: "+c.error.errors.join(","))}}),b},fetchAllowedValues:function(a,b){var c=Ext.create("Deft.Deferred");return Rally.data.ModelFactory.getModel({type:a,success:function(a){a.getField(b).getAllowedValueStore().load({callback:function(a,b,d){var e=Ext.Array.map(a,function(a){return a.get("StringValue")});c.resolve(e)}})},failure:function(a){c.reject("Error loading field values: "+a)}}),c},fetchModelFields:function(a){var b=Ext.create("Deft.Deferred");return Rally.data.ModelFactory.getModel({type:a,success:function(a){b.resolve(a.getFields())},failure:function(a){b.reject("Error loading field values: "+a)}}),b}}),Ext.define("test-status-by-attribute",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},integrationHeaders:{name:"cats-test-status-by-attribute"},config:{defaultSettings:{modelName:"TestCase",xAxisField:"LastVerdict",yAxisField:"TestSet: Name",xAxisValues:void 0,yAxisValues:void 0,includeXTotal:!0,includeYTotal:!0,gridFilter:"",includeBlanks:!0,sortBy:"total",sortDir:"desc",rowLimit:""}},yAxisOptions:[],launch:function(){this._initializeApp()},_initializeApp:function(){Deft.Promise.all([Rally.technicalservices.WsapiToolbox.fetchModelFields("TestSet"),Rally.technicalservices.WsapiToolbox.fetchModelFields("Artifact"),Rally.technicalservices.WsapiToolbox.fetchModelFields("TestCase")]).then({success:function(a){this._initailizeYAxisOptions(a[0],a[1],a[2]),this._initializeDisplay()},failure:this._showErrorNotification,scope:this})},_initailizeYAxisOptions:function(a,b,c){var d=[];Ext.Array.each(c,function(a){(a.attributeDefinition&&a.attributeDefinition.Constrained||"TestFolder"===a.name)&&d.push({displayName:"TestCase: "+a.displayName,modelName:"TestCase",fieldName:a.name,queryName:a.name})}),Ext.Array.each(a,function(a){(a.attributeDefinition&&a.attributeDefinition.Constrained||"Name"===a.name)&&d.push({displayName:"TestSet: "+a.displayName,modelName:"TestSet",fieldName:a.name,queryName:"TestSets."+a.name})}),Ext.Array.each(b,function(a){(a.attributeDefinition&&a.attributeDefinition.Constrained||"Name"===a.name)&&d.push({displayName:"WorkProduct: "+a.displayName,modelName:"WorkProduct",fieldName:a.name,queryName:"WorkProduct."+a.name})}),this.logger.log("yAxisOptions",d),this.yAxisOptions=d},_showErrorNotification:function(a){Rally.ui.notify.Notifier.showError({message:a})},_initializeDisplay:function(){var a=this.add({xtype:"container",layout:"hbox",itemId:"selectorBox"});a.add({xtype:"rallyfieldcombobox",model:"TestCase",itemId:"xAxisField",fieldLabel:"X Axis Field",labelWidth:100,labelAlign:"right",blackListFields:[],whiteListFields:["Release","Iteration","ScheduleState","State"],allowedTypes:["STRING","RATING"],constrained:!0}),a.add({xtype:"rallycombobox",store:Ext.create("Ext.data.Store",{fields:["displayName","modelName","fieldName"],data:this.yAxisOptions}),itemId:"yAxisField",labelAlign:"right",fieldLabel:"Y Axis Field",labelWidth:100,displayField:"displayName",valueField:"queryName"}),a.add({xtype:"rallybutton",text:"Update",listeners:{click:this._updateDisplay,scope:this}})},_updateDisplay:function(){this.down("#xAxisField").getValue(),this.getYAxisModelName(),this.getYAxisFieldName();this.logger.log("_updateDisplay"),this._fetchData().then({success:this._buildGrid,failure:this._showErrorNotification,scope:this})},getXAxisField:function(){return this.down("#xAxisField").getValue()},getYAxisFields:function(){var a=[],b=this.down("#yAxisField").getRecord();return"WorkProduct"===b.get("modelName")&&a.push("WorkProduct"),a.push(b.get("fieldName")),a},getYAxisModelName:function(){var a=this.down("#yAxisField").getStore().find("displayName",this.down("#yAxisField").getValue());return console.log("y",a),a.get("modelName")},getFilters:function(){return"WorkProduct"===this.getYAxisModelName()?[{property:"WorkProduct.ObjectID",operator:">",value:0}]:"TestSet"===this.getYAxisModelName()?[{property:"TestCases.ObjectID",operator:">",value:0}]:[]},_fetchData:function(){return"TestSet"===this.getYAxisModelName()?Rally.technicalservices.WsapiToolbox.fetchWsapiRecords({model:"TestSet",fetch:["TestCases","ObjectID","Name"].concat(this.getYAxisFields()),filters:this.getFilters()}):Rally.technicalservices.WsapiToolbox.fetchWsapiRecords({model:"TestCase",fetch:[this.getXAxisField(),"ObjectID"].concat(this.getYAxisFields()),filters:this.getFilters()})},_buildGrid:function(a){this.logger.log("_buildGrid",a)},getSettingsFields:function(){var a=this.getSettings(),b=a.sortBy||"alpha",c=a.sortDir||"desc",d=150,e=(Ext.create("Ext.data.Store",{fields:["displayName","modelName","fieldName"],data:this.yAxisOptions}),[{xtype:"rallyfieldcombobox",model:a.modelName,name:"xAxisField",fieldLabel:"X Axis Field",labelWidth:d,labelAlign:"right",blackListFields:[],allowedTypes:["STRING","RATING"],constrained:!0,bubbleEvents:["change"]},{name:"xAxisValues",xtype:"multivaluecombo",readyEvent:"ready",labelWidth:d,labelAlign:"right",width:500,modelName:a.modelName,fieldName:null,emptyText:"Choose field values to limit columns or leave blank to show all values...",fieldLabel:"X Axis Values",handlesEvents:{change:function(a){"xAxisField"===a.name&&this.refreshField(a.getValue())}}},{xtype:"combobox",store:yAxisOptionsStore,name:"yAxisField",labelAlign:"right",fieldLabel:"Y Axis Field",labelWidth:d,bubbleEvents:["change"],displayField:"displayName",valueField:"displayName"},{xtype:"rallycheckboxfield",fieldLabel:"Include Blanks",value:a.includeBlanks,name:"includeBlanks",labelAlign:"right",labelWidth:d},{xtype:"rallycheckboxfield",fieldLabel:"Include Row Totals",value:a.includeXTotal,name:"includeXTotal",labelAlign:"right",labelWidth:d},{xtype:"rallycheckboxfield",fieldLabel:"Include Column Totals",value:a.includeYTotal,name:"includeYTotal",labelAlign:"right",labelWidth:d},{xtype:"radiogroup",fieldLabel:"Sort By",columns:1,vertical:!0,labelWidth:d,labelAlign:"right",items:[{boxLabel:"Alphabetical",name:"sortBy",inputValue:"alpha",checked:"alpha"===b},{boxLabel:"Total",name:"sortBy",inputValue:"total",checked:"total"===b}]},{xtype:"radiogroup",fieldLabel:"Sort Direction",columns:1,vertical:!0,labelWidth:d,labelAlign:"right",items:[{boxLabel:"Descending",name:"sortDir",inputValue:"desc",checked:"desc"===c},{boxLabel:"Ascending",name:"sortDir",inputValue:"asc",checked:"asc"===c}]},{xtype:"rallynumberfield",fieldLabel:"Total Rows to Display (Blank for no limit)",name:"rowLimit",labelWidth:d,labelAlign:"right",minValue:1,allowBlank:!0,value:a.rowLimit},{xtype:"textarea",fieldLabel:"Query",name:"gridFilter",anchor:"100%",cls:"query-field",margin:"0 70 0 0",labelAlign:"right",labelWidth:d,plugins:[{ptype:"rallyhelpfield",helpId:194},"rallyfieldvalidationui"],validateOnBlur:!1,validateOnChange:!1,validator:function(a){try{return a&&Rally.data.wsapi.Filter.fromQueryString(a),!0}catch(b){return b.message}}}]);return e},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('test-status-by-attribute', {
                   name: 'Test Status by Attribute'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>