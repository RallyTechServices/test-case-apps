<!DOCTYPE html>
<html>
<head>
    <title>Enhanced Test Set Management</title>
    <!--  (c) 2017 CA Technologies.  All Rights Reserved. -->
    <!--  Build Date: Mon Sep 18 2017 14:13:26 GMT-0600 (MDT) -->
    
    <script type="text/javascript">
        var APP_BUILD_DATE = "Mon Sep 18 2017 14:13:26 GMT-0600 (MDT)";
        var STORY    = "US1715";
        var BUILDER  = "corkr03";
        var CHECKSUM = 14544396080;
    </script>
    
    <script type="text/javascript" src="/apps/2.1/sdk.js"></script>
    <!-- our highcharts (needed so that we can add patterns) 
    <script type="text/javascript" src="/apps/2.1/lib/analytics/analytics-all.js"></script>
    -->
    
    
    <script type="text/javascript">
        Rally.onReady(function() {
            Ext.define("Rally.technicalservices.InfoLink",{extend:"Rally.ui.dialog.Dialog",alias:"widget.tsinfolink",informationHtml:null,title:"Build Information",defaults:{padding:5,margin:5},closable:!0,draggable:!0,autoShow:!0,width:350,informationalConfig:null,items:[{xtype:"container",itemId:"information"}],initComponent:function(){Ext.id(this);this.title="<span class='icon-help'> </span>"+this.title,this.callParent(arguments)},_generateChecksum:function(a){var b,c=305419896;for(a=a.replace(/var CHECKSUM = .*;/,""),a=a.replace(/var BUILDER  = .*;/,""),a=a.replace(/\s/g,""),b=0;b<a.length;b++)c+=a.charCodeAt(b)*b;return c},_checkChecksum:function(a){var b=Ext.create("Deft.Deferred"),c=this;return Ext.Ajax.request({url:document.URL,params:{id:1},success:function(a){if(text=a.responseText,CHECKSUM){var d=c._generateChecksum(text);if(CHECKSUM!==d)return void b.resolve(!1)}b.resolve(!0)}}),b.promise},_addToContainer:function(a){var b=Ext.apply({xtype:"container",height:200,overflowY:!0},this.informationalConfig);a.add(b)},afterRender:function(){var a=Rally.getApp();if(!Ext.isEmpty(this.informationalConfig)){var b=this.down("#information");this._addToContainer(b)}a.isExternal()?this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"... Running externally"}):this._checkChecksum(a).then({scope:this,success:function(a){a||this.addDocked({xtype:"container",cls:"build-info",dock:"bottom",padding:2,html:'<span class="icon-warning"> </span>Checksums do not match'})},failure:function(a){console.log("oops:",a)}}),this.callParent(arguments)},beforeRender:function(){if(this.callParent(arguments),this.informationHtml&&this.addDocked({xtype:"component",componentCls:"intro-panel",padding:2,html:this.informationHtml,doc:"top"}),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:"This app was created by the CA AC Technical Services Team."}),APP_BUILD_DATE){var a=Ext.String.format("Built on: {0} <br/>Built by: {1}",APP_BUILD_DATE,BUILDER);STORY&&(a=a+"<br/>Source story: "+STORY),this.addDocked({xtype:"container",cls:"build-info",padding:2,dock:"bottom",html:a})}}}),Ext.define("Rally.technicalservices.Logger",{constructor:function(a){Ext.apply(this,a)},log:function(a){var b="[ "+Ext.util.Format.date(new Date,"Y-m-d H:i:s.u")+" ]",c=[];c=Ext.Array.push(c,[b]),c=Ext.Array.push(c,Ext.Array.slice(arguments,0)),window.console&&console.log.apply(console,c)}}),Ext.define("Rally.ui.menu.bulk.EnhancedAddTestCaseMenuItem",{extend:"Rally.ui.menu.bulk.MenuItem",alias:"widget.rallybulkmenuitemenhancedaddtestcase",mixins:{messageable:"Rally.Messageable"},config:{text:"Add Existing Test Cases...",handler:function(){this._onAddTestCaseClicked(this.records)},predicate:function(a){return _.every(a,function(a){return"testset"===a.get("_type")})}},_onAddTestCaseClicked:function(){Ext.get(this.owningEl||this.getEl());Ext.create("CA.ts.testcaseapps.dialog.AddTestCaseDialog",{height:.75*Rally.getApp().getHeight(),width:.75*Rally.getApp().getWidth(),listeners:{itemselected:this.updateTestSets,scope:this}}).show()},updateTestSets:function(a){var b=[],c=this;Ext.Array.each(this.records,function(d){b.push(function(){return c._updateTestSet(d,a)})},this),Deft.Chain.sequence(b).then({success:function(a){console.log("results",a);var b=[],c=[],d=[];Ext.Array.each(a,function(a){"success"===a.status?b.push(a.testSet):(c.push(a.testSet),d.push(a.message))}),d=_.uniq(d),this.onSuccess(b,c,d.join("<br/>"))},scope:this})},_updateTestSet:function(a,b){var c=a.getCollection("TestCases"),d=Ext.create("Deft.Deferred");return c.load({callback:function(){c.add(b),c.sync({success:function(b){d.resolve({testSet:a,status:"success"})},failure:function(b,c){var e=c&&c.error&&c.error.errors&&c.error.errors.join(",")||"unknown error";d.resolve({testSet:a,status:"error",message:e})}})}}),d.promise},onSuccess:function(a,b,c){var d="TestCases have been added to "+a.length+(1===a.length?" TestSet.":" TestSets.");a.length===this.records.length?(this.publish(Rally.Message.bulkUpdate,a,"TestCases",this),Rally.ui.notify.Notifier.show({message:d})):(0===a.length?d="No test cases have been added to Test Sets.":this.publish(Rally.Message.bulkUpdate,a,"TestCases",this),Rally.ui.notify.Notifier.showError({message:d+", but "+b.length+" failed: "+c,allowHTML:!0,saveDelay:500})),Ext.callback(this.onActionComplete,null,[a,b])}}),Ext.define("Rally.ui.menu.item.EnhancedAddTestCaseMenuItem",{extend:"Rally.ui.menu.item.RecordMenuItem",alias:"widget.rallyrecordmenuitemenhancedaddtestcase",mixins:{messageable:"Rally.Messageable"},config:{text:"Add Existing Test Cases...",cls:"artifact-icon icon-test-case",predicate:function(a){return"testset"===a.get("_type")},handler:function(){this._onAddTestCaseClicked(this.record)}},_onAddTestCaseClicked:function(){Ext.get(this.owningEl||this.getEl());Ext.create("CA.ts.testcaseapps.dialog.AddTestCaseDialog",{height:.75*Rally.getApp().getHeight(),width:.75*Rally.getApp().getWidth(),listeners:{itemselected:this.updateTestSets,scope:this}}).show()},updateTestSets:function(a){console.log("updateTestSets",a,this.record);var b=this.record.getCollection("TestCases");b.load({callback:function(){b.add(a),b.sync({success:this._onSuccess,failure:this._onFailure,callback:this._onCallback,scope:this})},scope:this})},_onSuccess:function(a){var b=this.record.copy();b.self.load(b.getId(),{callback:function(a){this.publish(Rally.Message.objectUpdate,a,"TestCases",this),Rally.ui.notify.Notifier.showUpdate({artifact:this.record})},scope:this})},_onFailure:function(a,b){Rally.data.util.Record.showWsapiErrorNotification(this.record,b)},_onCallback:function(){Ext.callback(this.afterAction,this.actionScope,[this.record])}}),Ext.define("CA.ts.testcaseapps.dialog.AddTestCaseDialog",{extend:"Rally.ui.dialog.Dialog",alias:"widget.catstestcasesearchdialog",mixins:{messageable:"Rally.Messageable",clientMetrics:"Rally.clientmetrics.ClientMetricsRecordable"},layout:"fit",closable:!0,draggable:!0,resizable:!0,config:{title:"Select Test Cases",selectionButtonText:"Add"},buildChooser:Ext.emptyFn,controller:"Rally.ui.dialog.AbstractChooserDialogController",constructor:function(a){this.mergeConfig(a),this.callParent(arguments)},initComponent:function(){this.callParent(arguments),this.addCls(["chooserDialog","chooser-dialog"]),this._buildButtons(),this._buildSelectors(),this._createChooser()},onSelectButtonClick:function(){this.fireEvent("itemselected",this.getSelectedTestCases()),this.destroy()},getSelectedTestCases:function(){return this.selectedRecords||[]},onCancelButtonClick:function(){this.destroy()},_createChooser:function(){chooser=this.buildChooser(),chooser?this.mon(chooser,"ready",function(){this.fireEvent("ready",this)},this):this.fireEvent("ready",this);var a=this.add({xtype:"container",itemId:"gridBox",tpl:"<tpl>{message}</tpl>",cls:"rui-info-label"});return a.update({message:"Please select a type of search and enter search terms"}),chooser},buildChooser:function(){return null},_buildSelectors:function(){this.addDocked({xtype:"toolbar",itemId:"searchBar",layout:{type:"hbox"},dock:"top",border:!1,padding:"0 0 10px 0",items:[{xtype:"rallybutton",iconCls:"icon-folder",itemId:"TestFolder",enableToggle:!0,pressed:!0,cls:"rly-small primary",toggleGroup:"searchType",listeners:{scope:this,toggle:this._toggleState}},{xtype:"rallybutton",iconCls:"icon-story",enableToggle:!0,toggleGroup:"searchType",cls:"rly-small secondary",itemId:"HierarchicalRequirement",listeners:{scope:this,toggle:this._toggleState}},{xtype:"rallybutton",iconCls:"icon-test",itemId:"TestCase",enableToggle:!0,toggleGroup:"searchType",cls:"rly-small secondary",listeners:{scope:this,toggle:this._toggleState}},{xtype:"triggerfield",cls:"rui-triggerfield chooser-search-terms",emptyText:"Search Keyword or ID",enableKeyEvents:!0,flex:1,itemId:"searchTerms",listeners:{keyup:function(a,b){b.getKey()===Ext.EventObject.ENTER&&this._search()},afterrender:function(a){a.focus()},scope:this},triggerBaseCls:"icon-search chooser-search-icon"},{xtype:"rallybutton",cls:"rly-small primary",iconCls:"icon-search",listeners:{click:this._search,scope:this}}]})},_toggleState:function(a,b){a&&(b?(a.removeCls("secondary"),a.addCls("primary"),this.down("#searchTerms").getValue()&&this._search()):(a.removeCls("primary"),a.addCls("secondary")))},getSearchType:function(){var a=this.query('rallybutton[toggleGroup="searchType"]'),b=null;return Ext.Array.each(a,function(a){return a.pressed?(b=a.itemId,!1):void 0}),b},getProject:function(){return null},_clearGridBox:function(){this.down("#gridBox").removeAll(),this.down("#gridBox").update({message:""}),this.selectedRecords=[]},_buildStorySearchGrid:function(a,b){var c=[{property:"WorkProduct.Name",operator:"contains",value:a},{property:"WorkProduct.FormattedID",value:a}];c=Rally.data.wsapi.Filter.or(c),this.down("#gridBox").add({xtype:"rallygrid",storeConfig:{model:"TestCase",filters:c,fetch:["ObjectID","Name","FormattedID","TestFolder","Project","Type","WorkProduct"],context:{project:b,projectScopeDown:!0},enablePostGet:!0,autoLoad:!0,pageSize:2e3},selModel:Ext.create("Rally.ui.selection.CheckboxModel"),columnCfgs:["FormattedID","Name","TestFolder","Project","Type","WorkProduct"],showRowActionsColumn:!1,height:this.down("#gridBox").getHeight(),showPagingToolbar:!0,listeners:{scope:this,beforeselect:this._onGridSelect,beforedeselect:this._onGridDeselect},pagingToolbarCfg:{pageSizes:[100,500,1e3,2e3]}})},_buildTestFolderSearchGrid:function(a,b){for(var c=[],d=[],e=12,f=["Name"],g=0;e>g;g++)c.push({property:f.join("."),operator:"contains",value:a}),d.push({property:"TestFolder."+f.join("."),operator:"contains",value:a}),f.unshift("Parent");d=Rally.data.wsapi.Filter.or(d),c=Rally.data.wsapi.Filter.or(c),this.setLoading(!0),Deft.Promise.all([this._fetchWsapiRecords({model:"TestFolder",filters:c,fetch:["Name","Parent","FormattedID","ObjectID","Project"]}),this._fetchWsapiRecords({model:"TestCase",filters:d,fetch:["Name","TestFolder","FormattedID","ObjectID","Project","Type"]})]).then({success:this._buildTestFolderTreeStore,failure:this._onError,scope:this}).always(function(){this.setLoading(!1)},this)},_onError:function(a){Rally.ui.notify.Notifier.showError({message:a})},_buildTestFolderTreeStore:function(a){this._buildTestFolderTree(a[0],a[1])},_buildTestFolderTree:function(a,b){for(var c=_.reduce(a,function(a,b){return a[b.get("ObjectID")]=b.getData(),a},{}),d=0;d<b.length;d++){var e=b[d].getData(),f=e.TestFolder&&e.TestFolder.ObjectID;e.leaf=!0,e.checked=!1,c[f].children||(c[f].children=[]),c[f].children.push(e)}var g=[];_.forEach(c,function(a,b){var d=a.Parent&&a.Parent.ObjectID&&c[a.Parent.ObjectID]||null;d?(c[d.ObjectID].children||(c[d.ObjectID].children=[]),c[d.ObjectID].children.push(a)):g.push(a)});var h=Ext.create("Ext.data.TreeStore",{model:"TestFolderTreeModel",root:{expanded:!1,children:g}});this.down("#gridBox").add({xtype:"treepanel",store:h,cls:"rally-grid",rootVisible:!1,enableColumnMove:!0,sortableColumns:!1,rowLines:!0,height:this.down("#gridBox").getHeight(),columns:this._getTreeColumns(),listeners:{scope:this,checkchange:this._onChecked}})},_onChecked:function(a,b){if(b)this.selectedRecords.push(a.get("_ref"));else{var c=this.selectedRecords.indexOf(a.get("_ref"));c>-1&&this.selectedRecords.splice(c,1)}this._enableButtons()},_onGridSelect:function(a,b){this._onChecked(b,!0)},_onGridDeselect:function(a,b){this._onChecked(b,!1)},_enableButtons:function(a){var b=!0;this.selectedRecords&&this.selectedRecords.length>0&&(b=!1),this.down("#selectButton").setDisabled(b)},_getTreeColumns:function(){return[{xtype:"treecolumn",text:"Item",dataIndex:"Name",itemId:"tree_column",renderer:this._nameRenderer,menuDisabled:!0,otherFields:["FormattedID","ObjectID"],flex:1},{text:"Type",dataIndex:"Type",menuDisabled:!0},{text:"Project",dataIndex:"Project",menuDisabled:!0,renderer:function(a,b,c){return Ext.isObject(a)?a._refObjectName:a}}]},_nameRenderer:function(a,b,c){var d=c.get("Name");if(c.get("FormattedID")){var e=Rally.nav.Manager.getDetailUrl(c),f=Rally.util.TypeInfo.getTypeInfoByName(c.get("_type")),g=f&&f.icon;d='<span class="formatted-id-template"><span class="artifact-icon '+g+'"></span><a target="_blank" href="'+e+'">'+c.get("FormattedID")+"</a>: </span>"+c.get("Name")}return d},_buildTestCaseSearchGrid:function(a,b){var c=[{property:"Name",operator:"contains",value:a},{property:"FormattedID",value:a}];c=Rally.data.wsapi.Filter.or(c),this.down("#gridBox").add({xtype:"rallygrid",storeConfig:{model:"TestCase",filters:c,fetch:["ObjectID","Name","FormattedID","TestFolder","Project","Type"],autoLoad:!0,pageSize:2e3},selModel:Ext.create("Rally.ui.selection.CheckboxModel"),columnCfgs:["FormattedID","Name","TestFolder","Project","Type"],showRowActionsColumn:!1,height:this.down("#gridBox").getHeight(),showPagingToolbar:!0,listeners:{scope:this,beforeselect:this._onGridSelect,beforedeselect:this._onGridSelect},pagingToolbarCfg:{pageSizes:[100,500,1e3,2e3]}})},_updateMessage:function(a){this.down("#gridBox").removeAll(),this.down("#gridBox").update({message:a})},_search:function(){var a=this.down("#searchTerms").getValue(),b=this.getSearchType(),c=this.getProject();switch(this._clearGridBox(),b){case"HierarchicalRequirement":this._buildStorySearchGrid(a,c);break;case"TestFolder":this._buildTestFolderSearchGrid(a,c);break;case"TestCase":this._buildTestCaseSearchGrid(a,c);break;default:this._updateMessage("Choose a type to search for (Test Folder, User Story, or Test Case)")}},_buildButtons:function(){this.addDocked({xtype:"toolbar",dock:"bottom",layout:{type:"hbox",pack:"center"},ui:"footer",items:[{xtype:"rallybutton",itemId:"selectButton",text:this.getSelectionButtonText(),cls:"primary rly-small",disabled:!0,margin:8,listeners:{click:this.onSelectButtonClick,scope:this}},{xtype:"rallybutton",itemId:"cancelButton",text:"Cancel",cls:"secondary rly-small",ui:"link",margin:8,listeners:{click:this.onCancelButtonClick,scope:this}}]})},_fetchWsapiRecords:function(a){var b=Ext.create("Deft.Deferred");return a.limit||(a.limit="Infinity"),a.pageSize||(a.pageSize=2e3),Ext.create("Rally.data.wsapi.Store",a).load({callback:function(a,c,d){d?b.resolve(a):b.reject("Problem fetching: "+c.error.errors.join(". "))}}),b.promise}}),Ext.define("TestFolderTreeModel",{extend:"Ext.data.Model",fields:[{name:"FormattedID",type:"String"},{name:"Name",type:"String"},{name:"Project",type:"auto"},{name:"_ref",type:"String"},{name:"_type",type:"String"},{name:"Type",type:"String"}]}),Ext.define("enhanced-test-set-mgmt",{extend:"Rally.app.App",componentCls:"app",logger:new Rally.technicalservices.Logger,defaults:{margin:10},items:[{xtype:"container",itemId:"message_box",tpl:"Hello, <tpl>{_refObjectName}</tpl>"},{xtype:"container",itemId:"display_box"}],integrationHeaders:{name:"enhanced-test-set-mgmt"},config:{defaultSettings:{type:"TestSet"}},launch:function(){this._buildStore()},_buildStore:function(){this.modelNames=[this.getSetting("type")],this.logger.log("_buildStore",this.modelNames);var a=["FormattedID","Name"];Ext.create("Rally.data.wsapi.TreeStoreBuilder").build({models:this.modelNames,enableHierarchy:!0,fetch:a}).then({success:this._addGridboard,scope:this})},_addGridboard:function(a){this.down("#display_box")&&this.down("#display_box").removeAll();var b=this.getSetting("query")?Rally.data.wsapi.Filter.fromQueryString(this.getSetting("query")):[];this.logger.log("_addGridboard",a),this.gridboard=this.down("#display_box").add({xtype:"rallygridboard",context:this.getContext(),modelNames:this.modelNames,toggleState:"grid",plugins:["rallygridboardaddnew",{ptype:"rallygridboardinlinefiltercontrol",inlineFilterButtonConfig:{stateful:!0,stateId:this.getContext().getScopedStateId("filters-1"),modelNames:this.modelNames,inlineFilterPanelConfig:{quickFilterPanelConfig:{whiteListFields:["Tags","Milestones"],defaultFields:["ArtifactSearch","Owner","ModelType","Milestones"]}}}},{ptype:"rallygridboardfieldpicker",headerPosition:"left",modelNames:this.modelNames}],cardBoardConfig:{attribute:"ScheduleState"},gridConfig:{store:a,storeConfig:{filters:b},bulkEditConfig:{items:[{xtype:"rallybulkmenuitemenhancedaddtestcase"}]},rowActionColumnConfig:{rowActionsFn:function(a){return[{xtype:"rallyrecordmenuitemenhancedaddtestcase",record:a},{xtype:"menuseparator",margin:"0 0 0 0",padding:"0 0 0 0"},{xtype:"rallyrecordmenuitemcopy",record:a},{xtype:"rallyrecordmenuitemdelete",record:a}]}},columnCfgs:["Name"]},height:this.getHeight()})},getOptions:function(){return[{text:"About...",handler:this._launchInfo,scope:this}]},_launchInfo:function(){this.about_dialog&&this.about_dialog.destroy(),this.about_dialog=Ext.create("Rally.technicalservices.InfoLink",{})},isExternal:function(){return"undefined"==typeof this.getAppId()}});
            
               Rally.launchApp('enhanced-test-set-mgmt', {
                   name: 'Enhanced Test Set Management'
               });
        });
    </script>
    
    <style type="text/css">

.app {
}
.tsinfolink {
    position:absolute;
    right:0px;
    width: 14px;
    height: 14px;
    border-radius: 7px;
    text-align: center;
    color: white;
    background: #C0C0C0;
    border-style: solid;
    border-width: 1px;
    margin-top: 25px;
    margin-right: 5px;
    cursor: pointer;
}
    </style>

</head>
<body></body>
</html>